///
/// JPAstreamer - Express JPA queries with Java Streams
/// Copyright (c) 2020-2022, Speedment, Inc. All Rights Reserved.
///
/// License: GNU Lesser General Public License (LGPL), version 2.1 or later.
///
/// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
/// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
/// See the GNU Lesser General Public License for more details.
///
/// See: https://github.com/speedment/jpa-streamer/blob/master/LICENSE
///

import type { Selector, PseudoSelector } from "css-what";
export declare type Filter = "first" | "last" | "eq" | "nth" | "gt" | "lt" | "even" | "odd" | "not";
export declare const filterNames: Set<string>;
export interface CheerioSelector extends PseudoSelector {
    name: Filter;
    data: string | null;
}
export declare function isFilter(s: Selector): s is CheerioSelector;
export declare function getLimit(filter: Filter, data: string | null, partLimit: number): number;
//# sourceMappingURL=positionals.d.ts.map